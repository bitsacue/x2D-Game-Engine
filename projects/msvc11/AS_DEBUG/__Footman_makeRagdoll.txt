void Footman::makeRagdoll()

Temps: 2, 3, 4, 5, 6, 7, 8

Variables: 
 001: int i
 001: int i
 001: int i
 000: Footman this
 003: array {noname}


    0   8 *    PshVPtr  v0
    1   9 *    CALLSYS  2           (void _builtin_object_::_beh_5_())
- 415,7 -
    3   8 *    SUSPEND
    4   8 *    VarDecl  0
    4   8 *    SetV4    v1, 0x0          (i:0, f:0)
    6   8 *    JMP      +19              (d:27)
    8   8 * 4:
    8   8 *    SUSPEND
- 416,4 -
    9   8 *    SUSPEND
   10   8 *    PshV4    v1
   11   9 *    PshVPtr  v0
   12  10 *    ADDSi    v136, 134217775
   14  10 *    RDSPtr
   15  10 *    RefCpyV  v3, 71972784
   17  10 *    CALLSYS  1022           (int& array::opIndex(uint))
   19   8 *    RDR4     v2
   20   8 *    PshV4    v2
   21   9 *    CALLSYS  575           (void b2dDisableRevoluteJointMotor(int))
   23   8 *    FREE     v3, 71972784
- 415,37 -
   25   8 * 3:
   25   8 *    SUSPEND
   26   8 *    IncVi    v1
- 415,18 -
   27   8 * 1:
   27   8 *    SUSPEND
   28   8 *    CMPIi    v1, 10
   30   8 *    JS       -24              (d:8)
- 419,7 -
   32   8 * 2:
   32   8 *    SUSPEND
   33   8 *    VarDecl  1
   33   8 *    SetV4    v1, 0x0          (i:0, f:0)
   35   8 *    JMP      +21              (d:58)
   37   8 * 8:
   37   8 *    SUSPEND
- 420,4 -
   38   8 *    SUSPEND
   39   8 *    PshC4    0x3f800000          (i:1065353216, f:1)
   41   9 *    PshV4    v1
   42  10 *    PshVPtr  v0
   43  11 *    ADDSi    v132, 134217775
   45  11 *    RDSPtr
   46  11 *    RefCpyV  v3, 71972784
   48  11 *    CALLSYS  1022           (int& array::opIndex(uint))
   50   9 *    RDR4     v4
   51   9 *    PshV4    v4
   52  10 *    CALLSYS  545           (void b2dSetBodyGravityScale(int, float))
   54   8 *    FREE     v3, 71972784
- 419,32 -
   56   8 * 7:
   56   8 *    SUSPEND
   57   8 *    IncVi    v1
- 419,18 -
   58   8 * 5:
   58   8 *    SUSPEND
   59   8 *    CMPIi    v1, 11
   61   8 *    JS       -26              (d:37)
- 423,7 -
   63   8 * 6:
   63   8 *    SUSPEND
   64   8 *    VarDecl  2
   64   8 *    SetV4    v1, 0x0          (i:0, f:0)
   66   8 *    JMP      +21              (d:89)
   68   8 * 12:
   68   8 *    SUSPEND
- 426,4 -
   69   8 * {
   69   8 *    SUSPEND
   70   8 *    PshC4    0x11          (i:17, f:2.38221e-044)
   72   9 *    PshV4    v1
   73  10 *    PshVPtr  v0
   74  11 *    ADDSi    v148, 134217775
   76  11 *    RDSPtr
   77  11 *    RefCpyV  v3, 71972784
   79  11 *    CALLSYS  1022           (int& array::opIndex(uint))
   81   9 *    RDR4     v2
   82   9 *    PshV4    v2
   83  10 *    CALLSYS  559           (void b2dSetFixtureMaskBits(int, int))
   85   8 *    FREE     v3, 71972784
- 423,32 -
   87   8 * }
   87   8 * 11:
   87   8 *    SUSPEND
   88   8 *    IncVi    v1
- 423,18 -
   89   8 * 9:
   89   8 *    SUSPEND
   90   8 *    CMPIi    v1, 11
   92   8 *    JS       -26              (d:68)
- 430,3 -
   94   8 * 10:
   94   8 *    SUSPEND
   95   8 *    PshC4    0x2          (i:2, f:2.8026e-045)
   97   9 *    PshC4    0x1          (i:1, f:1.4013e-045)
   99  10 *    PshVPtr  v0
  100  11 *    ADDSi    v132, 134217775
  102  11 *    RDSPtr
  103  11 *    RefCpyV  v3, 71972784
  105  11 *    CALLSYS  1022           (int& array::opIndex(uint))
  107   9 *    RDR4     v2
  108   9 *    PshV4    v2
  109  10 *    CALLSYS  537           (void b2dSetBodyType(int, BodyType))
  111   8 *    FREE     v3, 71972784
- 431,3 -
  113   8 *    SUSPEND
  114   8 *    PshC4    0x2          (i:2, f:2.8026e-045)
  116   9 *    PshC4    0x2          (i:2, f:2.8026e-045)
  118  10 *    PshVPtr  v0
  119  11 *    ADDSi    v132, 134217775
  121  11 *    RDSPtr
  122  11 *    RefCpyV  v3, 71972784
  124  11 *    CALLSYS  1022           (int& array::opIndex(uint))
  126   9 *    RDR4     v2
  127   9 *    PshV4    v2
  128  10 *    CALLSYS  537           (void b2dSetBodyType(int, BodyType))
  130   8 *    FREE     v3, 71972784
- 434,3 -
  132   8 *    SUSPEND
  133   8 *    CpyGtoV4 v4, 71908976
  135   8 *    MULIf    v2, v4, 40.000000
  138   8 *    SetV4    v6, 0x43340000          (i:1127481344, f:180)
  140   8 *    DIVf     v4, v2, v6
  142   8 *    PshV4    v4
  143   9 *    CpyGtoV4 v6, 71908976
  145   9 *    MULIf    v2, v6, 40.000000
  148   9 *    NEGf     v2
  149   9 *    SetV4    v7, 0x43340000          (i:1127481344, f:180)
  151   9 *    DIVf     v6, v2, v7
  153   9 *    PshV4    v6
  154  10 *    PshC4    0x0          (i:0, f:0)
  156  11 *    PshVPtr  v0
  157  12 *    ADDSi    v136, 134217775
  159  12 *    RDSPtr
  160  12 *    RefCpyV  v3, 71972784
  162  12 *    CALLSYS  1022           (int& array::opIndex(uint))
  164  10 *    RDR4     v2
  165  10 *    PshV4    v2
  166  11 *    CALLSYS  568           (void b2dSetRevoluteJoinLimits(int, float, float))
  168   8 *    FREE     v3, 71972784
- 435,3 -
  170   8 *    SUSPEND
  171   8 *    PshC4    0x0          (i:0, f:0)
  173   9 *    PshVPtr  v0
  174  10 *    ADDSi    v136, 134217775
  176  10 *    RDSPtr
  177  10 *    RefCpyV  v3, 71972784
  179  10 *    CALLSYS  1022           (int& array::opIndex(uint))
  181   8 *    RDR4     v2
  182   8 *    PshV4    v2
  183   9 *    CALLSYS  569           (void b2dEnableRevoluteJointLimits(int))
  185   8 *    FREE     v3, 71972784
- 437,3 -
  187   8 *    SUSPEND
  188   8 *    CpyGtoV4 v7, 71908976
  190   8 *    MULIf    v2, v7, 15.000000
  193   8 *    SetV4    v6, 0x43340000          (i:1127481344, f:180)
  195   8 *    DIVf     v7, v2, v6
  197   8 *    PshV4    v7
  198   9 *    CpyGtoV4 v6, 71908976
  200   9 *    MULIf    v4, v6, 15.000000
  203   9 *    NEGf     v4
  204   9 *    SetV4    v8, 0x43340000          (i:1127481344, f:180)
  206   9 *    DIVf     v6, v4, v8
  208   9 *    PshV4    v6
  209  10 *    PshC4    0x5          (i:5, f:7.00649e-045)
  211  11 *    PshVPtr  v0
  212  12 *    ADDSi    v136, 134217775
  214  12 *    RDSPtr
  215  12 *    RefCpyV  v3, 71972784
  217  12 *    CALLSYS  1022           (int& array::opIndex(uint))
  219  10 *    RDR4     v2
  220  10 *    PshV4    v2
  221  11 *    CALLSYS  568           (void b2dSetRevoluteJoinLimits(int, float, float))
  223   8 *    FREE     v3, 71972784
- 438,3 -
  225   8 *    SUSPEND
  226   8 *    PshC4    0x5          (i:5, f:7.00649e-045)
  228   9 *    PshVPtr  v0
  229  10 *    ADDSi    v136, 134217775
  231  10 *    RDSPtr
  232  10 *    RefCpyV  v3, 71972784
  234  10 *    CALLSYS  1022           (int& array::opIndex(uint))
  236   8 *    RDR4     v2
  237   8 *    PshV4    v2
  238   9 *    CALLSYS  569           (void b2dEnableRevoluteJointLimits(int))
  240   8 *    FREE     v3, 71972784
- 440,3 -
  242   8 *    SUSPEND
  243   8 *    CpyGtoV4 v8, 71908976
  245   8 *    MULIf    v2, v8, 130.000000
  248   8 *    SetV4    v7, 0x43340000          (i:1127481344, f:180)
  250   8 *    DIVf     v8, v2, v7
  252   8 *    PshV4    v8
  253   9 *    CpyGtoV4 v7, 71908976
  255   9 *    MULIf    v6, v7, 85.000000
  258   9 *    NEGf     v6
  259   9 *    SetV4    v4, 0x43340000          (i:1127481344, f:180)
  261   9 *    DIVf     v7, v6, v4
  263   9 *    PshV4    v7
  264  10 *    PshC4    0x1          (i:1, f:1.4013e-045)
  266  11 *    PshVPtr  v0
  267  12 *    ADDSi    v136, 134217775
  269  12 *    RDSPtr
  270  12 *    RefCpyV  v3, 71972784
  272  12 *    CALLSYS  1022           (int& array::opIndex(uint))
  274  10 *    RDR4     v2
  275  10 *    PshV4    v2
  276  11 *    CALLSYS  568           (void b2dSetRevoluteJoinLimits(int, float, float))
  278   8 *    FREE     v3, 71972784
- 441,3 -
  280   8 *    SUSPEND
  281   8 *    PshC4    0x1          (i:1, f:1.4013e-045)
  283   9 *    PshVPtr  v0
  284  10 *    ADDSi    v136, 134217775
  286  10 *    RDSPtr
  287  10 *    RefCpyV  v3, 71972784
  289  10 *    CALLSYS  1022           (int& array::opIndex(uint))
  291   8 *    RDR4     v2
  292   8 *    PshV4    v2
  293   9 *    CALLSYS  569           (void b2dEnableRevoluteJointLimits(int))
  295   8 *    FREE     v3, 71972784
- 443,3 -
  297   8 *    SUSPEND
  298   8 *    CpyGtoV4 v4, 71908976
  300   8 *    MULIf    v2, v4, 130.000000
  303   8 *    SetV4    v8, 0x43340000          (i:1127481344, f:180)
  305   8 *    DIVf     v4, v2, v8
  307   8 *    PshV4    v4
  308   9 *    CpyGtoV4 v8, 71908976
  310   9 *    MULIf    v7, v8, 10.000000
  313   9 *    NEGf     v7
  314   9 *    SetV4    v6, 0x43340000          (i:1127481344, f:180)
  316   9 *    DIVf     v8, v7, v6
  318   9 *    PshV4    v8
  319  10 *    PshC4    0x2          (i:2, f:2.8026e-045)
  321  11 *    PshVPtr  v0
  322  12 *    ADDSi    v136, 134217775
  324  12 *    RDSPtr
  325  12 *    RefCpyV  v3, 71972784
  327  12 *    CALLSYS  1022           (int& array::opIndex(uint))
  329  10 *    RDR4     v2
  330  10 *    PshV4    v2
  331  11 *    CALLSYS  568           (void b2dSetRevoluteJoinLimits(int, float, float))
  333   8 *    FREE     v3, 71972784
- 444,3 -
  335   8 *    SUSPEND
  336   8 *    PshC4    0x2          (i:2, f:2.8026e-045)
  338   9 *    PshVPtr  v0
  339  10 *    ADDSi    v136, 134217775
  341  10 *    RDSPtr
  342  10 *    RefCpyV  v3, 71972784
  344  10 *    CALLSYS  1022           (int& array::opIndex(uint))
  346   8 *    RDR4     v2
  347   8 *    PshV4    v2
  348   9 *    CALLSYS  569           (void b2dEnableRevoluteJointLimits(int))
  350   8 *    FREE     v3, 71972784
- 446,3 -
  352   8 *    SUSPEND
  353   8 *    CpyGtoV4 v6, 71908976
  355   8 *    MULIf    v2, v6, 85.000000
  358   8 *    SetV4    v4, 0x43340000          (i:1127481344, f:180)
  360   8 *    DIVf     v6, v2, v4
  362   8 *    PshV4    v6
  363   9 *    CpyGtoV4 v4, 71908976
  365   9 *    MULIf    v8, v4, 130.000000
  368   9 *    NEGf     v8
  369   9 *    SetV4    v7, 0x43340000          (i:1127481344, f:180)
  371   9 *    DIVf     v4, v8, v7
  373   9 *    PshV4    v4
  374  10 *    PshC4    0x3          (i:3, f:4.2039e-045)
  376  11 *    PshVPtr  v0
  377  12 *    ADDSi    v136, 134217775
  379  12 *    RDSPtr
  380  12 *    RefCpyV  v3, 71972784
  382  12 *    CALLSYS  1022           (int& array::opIndex(uint))
  384  10 *    RDR4     v2
  385  10 *    PshV4    v2
  386  11 *    CALLSYS  568           (void b2dSetRevoluteJoinLimits(int, float, float))
  388   8 *    FREE     v3, 71972784
- 447,3 -
  390   8 *    SUSPEND
  391   8 *    PshC4    0x3          (i:3, f:4.2039e-045)
  393   9 *    PshVPtr  v0
  394  10 *    ADDSi    v136, 134217775
  396  10 *    RDSPtr
  397  10 *    RefCpyV  v3, 71972784
  399  10 *    CALLSYS  1022           (int& array::opIndex(uint))
  401   8 *    RDR4     v2
  402   8 *    PshV4    v2
  403   9 *    CALLSYS  569           (void b2dEnableRevoluteJointLimits(int))
  405   8 *    FREE     v3, 71972784
- 449,3 -
  407   8 *    SUSPEND
  408   8 *    CpyGtoV4 v7, 71908976
  410   8 *    MULIf    v2, v7, 15.000000
  413   8 *    SetV4    v6, 0x43340000          (i:1127481344, f:180)
  415   8 *    DIVf     v7, v2, v6
  417   8 *    PshV4    v7
  418   9 *    CpyGtoV4 v6, 71908976
  420   9 *    MULIf    v4, v6, 130.000000
  423   9 *    NEGf     v4
  424   9 *    SetV4    v8, 0x43340000          (i:1127481344, f:180)
  426   9 *    DIVf     v6, v4, v8
  428   9 *    PshV4    v6
  429  10 *    PshC4    0x4          (i:4, f:5.60519e-045)
  431  11 *    PshVPtr  v0
  432  12 *    ADDSi    v136, 134217775
  434  12 *    RDSPtr
  435  12 *    RefCpyV  v3, 71972784
  437  12 *    CALLSYS  1022           (int& array::opIndex(uint))
  439  10 *    RDR4     v2
  440  10 *    PshV4    v2
  441  11 *    CALLSYS  568           (void b2dSetRevoluteJoinLimits(int, float, float))
  443   8 *    FREE     v3, 71972784
- 450,3 -
  445   8 *    SUSPEND
  446   8 *    PshC4    0x4          (i:4, f:5.60519e-045)
  448   9 *    PshVPtr  v0
  449  10 *    ADDSi    v136, 134217775
  451  10 *    RDSPtr
  452  10 *    RefCpyV  v3, 71972784
  454  10 *    CALLSYS  1022           (int& array::opIndex(uint))
  456   8 *    RDR4     v2
  457   8 *    PshV4    v2
  458   9 *    CALLSYS  569           (void b2dEnableRevoluteJointLimits(int))
  460   8 *    FREE     v3, 71972784
- 452,3 -
  462   8 *    SUSPEND
  463   8 *    CpyGtoV4 v8, 71908976
  465   8 *    MULIf    v2, v8, 45.000000
  468   8 *    SetV4    v7, 0x43340000          (i:1127481344, f:180)
  470   8 *    DIVf     v8, v2, v7
  472   8 *    PshV4    v8
  473   9 *    CpyGtoV4 v7, 71908976
  475   9 *    MULIf    v6, v7, 25.000000
  478   9 *    NEGf     v6
  479   9 *    SetV4    v4, 0x43340000          (i:1127481344, f:180)
  481   9 *    DIVf     v7, v6, v4
  483   9 *    PshV4    v7
  484  10 *    PshC4    0x6          (i:6, f:8.40779e-045)
  486  11 *    PshVPtr  v0
  487  12 *    ADDSi    v136, 134217775
  489  12 *    RDSPtr
  490  12 *    RefCpyV  v3, 71972784
  492  12 *    CALLSYS  1022           (int& array::opIndex(uint))
  494  10 *    RDR4     v2
  495  10 *    PshV4    v2
  496  11 *    CALLSYS  568           (void b2dSetRevoluteJoinLimits(int, float, float))
  498   8 *    FREE     v3, 71972784
- 453,3 -
  500   8 *    SUSPEND
  501   8 *    PshC4    0x6          (i:6, f:8.40779e-045)
  503   9 *    PshVPtr  v0
  504  10 *    ADDSi    v136, 134217775
  506  10 *    RDSPtr
  507  10 *    RefCpyV  v3, 71972784
  509  10 *    CALLSYS  1022           (int& array::opIndex(uint))
  511   8 *    RDR4     v2
  512   8 *    PshV4    v2
  513   9 *    CALLSYS  569           (void b2dEnableRevoluteJointLimits(int))
  515   8 *    FREE     v3, 71972784
- 455,3 -
  517   8 *    SUSPEND
  518   8 *    CpyGtoV4 v4, 71908976
  520   8 *    MULIf    v2, v4, 45.000000
  523   8 *    SetV4    v8, 0x43340000          (i:1127481344, f:180)
  525   8 *    DIVf     v4, v2, v8
  527   8 *    PshV4    v4
  528   9 *    CpyGtoV4 v8, 71908976
  530   9 *    MULIf    v7, v8, 25.000000
  533   9 *    NEGf     v7
  534   9 *    SetV4    v6, 0x43340000          (i:1127481344, f:180)
  536   9 *    DIVf     v8, v7, v6
  538   9 *    PshV4    v8
  539  10 *    PshC4    0x7          (i:7, f:9.80909e-045)
  541  11 *    PshVPtr  v0
  542  12 *    ADDSi    v136, 134217775
  544  12 *    RDSPtr
  545  12 *    RefCpyV  v3, 71972784
  547  12 *    CALLSYS  1022           (int& array::opIndex(uint))
  549  10 *    RDR4     v2
  550  10 *    PshV4    v2
  551  11 *    CALLSYS  568           (void b2dSetRevoluteJoinLimits(int, float, float))
  553   8 *    FREE     v3, 71972784
- 456,3 -
  555   8 *    SUSPEND
  556   8 *    PshC4    0x7          (i:7, f:9.80909e-045)
  558   9 *    PshVPtr  v0
  559  10 *    ADDSi    v136, 134217775
  561  10 *    RDSPtr
  562  10 *    RefCpyV  v3, 71972784
  564  10 *    CALLSYS  1022           (int& array::opIndex(uint))
  566   8 *    RDR4     v2
  567   8 *    PshV4    v2
  568   9 *    CALLSYS  569           (void b2dEnableRevoluteJointLimits(int))
  570   8 *    FREE     v3, 71972784
- 458,3 -
  572   8 *    SUSPEND
  573   8 *    CpyGtoV4 v6, 71908976
  575   8 *    MULIf    v2, v6, 25.000000
  578   8 *    SetV4    v4, 0x43340000          (i:1127481344, f:180)
  580   8 *    DIVf     v6, v2, v4
  582   8 *    PshV4    v6
  583   9 *    CpyGtoV4 v4, 71908976
  585   9 *    MULIf    v8, v4, 45.000000
  588   9 *    NEGf     v8
  589   9 *    SetV4    v7, 0x43340000          (i:1127481344, f:180)
  591   9 *    DIVf     v4, v8, v7
  593   9 *    PshV4    v4
  594  10 *    PshC4    0x8          (i:8, f:1.12104e-044)
  596  11 *    PshVPtr  v0
  597  12 *    ADDSi    v136, 134217775
  599  12 *    RDSPtr
  600  12 *    RefCpyV  v3, 71972784
  602  12 *    CALLSYS  1022           (int& array::opIndex(uint))
  604  10 *    RDR4     v2
  605  10 *    PshV4    v2
  606  11 *    CALLSYS  568           (void b2dSetRevoluteJoinLimits(int, float, float))
  608   8 *    FREE     v3, 71972784
- 459,3 -
  610   8 *    SUSPEND
  611   8 *    PshC4    0x8          (i:8, f:1.12104e-044)
  613   9 *    PshVPtr  v0
  614  10 *    ADDSi    v136, 134217775
  616  10 *    RDSPtr
  617  10 *    RefCpyV  v3, 71972784
  619  10 *    CALLSYS  1022           (int& array::opIndex(uint))
  621   8 *    RDR4     v2
  622   8 *    PshV4    v2
  623   9 *    CALLSYS  569           (void b2dEnableRevoluteJointLimits(int))
  625   8 *    FREE     v3, 71972784
- 461,3 -
  627   8 *    SUSPEND
  628   8 *    CpyGtoV4 v7, 71908976
  630   8 *    MULIf    v2, v7, 25.000000
  633   8 *    SetV4    v6, 0x43340000          (i:1127481344, f:180)
  635   8 *    DIVf     v7, v2, v6
  637   8 *    PshV4    v7
  638   9 *    CpyGtoV4 v6, 71908976
  640   9 *    MULIf    v4, v6, 45.000000
  643   9 *    NEGf     v4
  644   9 *    SetV4    v8, 0x43340000          (i:1127481344, f:180)
  646   9 *    DIVf     v6, v4, v8
  648   9 *    PshV4    v6
  649  10 *    PshC4    0x9          (i:9, f:1.26117e-044)
  651  11 *    PshVPtr  v0
  652  12 *    ADDSi    v136, 134217775
  654  12 *    RDSPtr
  655  12 *    RefCpyV  v3, 71972784
  657  12 *    CALLSYS  1022           (int& array::opIndex(uint))
  659  10 *    RDR4     v2
  660  10 *    PshV4    v2
  661  11 *    CALLSYS  568           (void b2dSetRevoluteJoinLimits(int, float, float))
  663   8 *    FREE     v3, 71972784
- 462,3 -
  665   8 *    SUSPEND
  666   8 *    PshC4    0x9          (i:9, f:1.26117e-044)
  668   9 *    PshVPtr  v0
  669  10 *    ADDSi    v136, 134217775
  671  10 *    RDSPtr
  672  10 *    RefCpyV  v3, 71972784
  674  10 *    CALLSYS  1022           (int& array::opIndex(uint))
  676   8 *    RDR4     v2
  677   8 *    PshV4    v2
  678   9 *    CALLSYS  569           (void b2dEnableRevoluteJointLimits(int))
  680   8 *    FREE     v3, 71972784
- 465,3 -
  682   8 *    SUSPEND
  683   8 *    SetV1    v8, 0x1
  685   8 *    LoadThisR v128, 134217775
  687   8 *    WRTV1    v8
- 466,3 -
  688   8 *    SUSPEND
  689   8 * 0:
  689   8 *    FREE     v0, 71592408
  691   8 *    RET      1
