float Anim::getAngle(int)

Temps: 2, 3, 5, 6, 8, 9, 10, 13

Variables: 
 -001: int joint
 001: float percent
 004: float ang
 007: float nextAng
 011: float innerAng
 012: float outerAng
 014: float dtAng
 000: Anim this
 005: array {noname}
 006: array {noname}
 008: array {noname}


    0  14 *    VarDecl  0
    0  14 *    PshVPtr  v0
    1  15 *    CALLSYS  2           (void _builtin_object_::_beh_5_())
- 83,3 -
    3  14 *    SUSPEND
    4  14 *    VarDecl  1
    4  14 *    LoadThisR v20, 134217788
    6  14 *    RDR4     v3
    7  14 *    LoadThisR v20, 134217788
    9  14 *    RDR4     v2
   10  14 *    fTOi     v2
   11  14 *    iTOf     v2
   12  14 *    SUBf     v1, v3, v2
- 84,3 -
   14  14 *    SUSPEND
   15  14 *    VarDecl  2
   15  14 *    LoadThisR v20, 134217788
   17  14 *    RDR4     v2
   18  14 *    fTOi     v2
   19  14 *    PshV4    v2
   20  15 *    PshV4    v-1
   21  16 *    PshVPtr  v0
   22  17 *    ADDSi    v28, 134217788
   24  17 *    RDSPtr
   25  17 *    RefCpyV  v5, 72150536
   27  17 *    CALLSYS  1256           (float[]& array::opIndex(uint))
   29  15 *    PshRPtr
   30  16 *    RefCpyV  v6, 70803856
   32  16 *    CALLSYS  497           (float& array::opIndex(uint))
   34  14 *    RDR4     v3
   35  14 *    CpyVtoV4 v4, v3
   37  14 *    FREE     v5, 72150536
   39  14 *    FREE     v6, 70803856
- 85,3 -
   41  14 *    SUSPEND
   42  14 *    VarDecl  3
   42  14 *    LoadThisR v20, 134217788
   44  14 *    RDR4     v2
   45  14 *    fTOi     v2
   46  14 *    ADDIi    v2, v2, 1
   49  14 *    PshV4    v-1
   50  15 *    PshVPtr  v0
   51  16 *    ADDSi    v28, 134217788
   53  16 *    RDSPtr
   54  16 *    RefCpyV  v8, 72150536
   56  16 *    CALLSYS  1256           (float[]& array::opIndex(uint))
   58  14 *    PshRPtr
   59  15 *    CALLSYS  88           (uint array::size() const)
   61  14 *    CpyRtoV4 v3
   62  14 *    FREE     v8, 72150536
   64  14 *    CMPi     v2, v3
   66  14 *    JNS      +9              (d:77)
   68  14 *    LoadThisR v20, 134217788
   70  14 *    RDR4     v3
   71  14 *    fTOi     v3
   72  14 *    ADDIi    v10, v3, 1
   75  14 *    JMP      +2              (d:79)
   77  14 * 2:
   77  14 *    SetV4    v10, 0x0          (i:0, f:0)
   79  14 * 1:
   79  14 *    PshV4    v10
   80  15 *    PshV4    v-1
   81  16 *    PshVPtr  v0
   82  17 *    ADDSi    v28, 134217788
   84  17 *    RDSPtr
   85  17 *    RefCpyV  v5, 72150536
   87  17 *    CALLSYS  1256           (float[]& array::opIndex(uint))
   89  15 *    PshRPtr
   90  16 *    RefCpyV  v6, 70803856
   92  16 *    CALLSYS  497           (float& array::opIndex(uint))
   94  14 *    RDR4     v9
   95  14 *    CpyVtoV4 v7, v9
   97  14 *    FREE     v5, 72150536
   99  14 *    FREE     v6, 70803856
- 87,3 -
  101  14 *    SUSPEND
  102  14 *    VarDecl  4
  102  14 *    SUBf     v11, v7, v4
- 88,3 -
  104  14 *    SUSPEND
  105  14 *    VarDecl  5
  105  14 *    CMPIf    v11, 0.000000
  107  14 *    JNS      +6              (d:115)
  109  14 *    CpyGtoV4 v3, 71909472
  111  14 *    ADDf     v13, v3, v11
  113  14 *    JMP      +4              (d:119)
  115  14 * 4:
  115  14 *    CpyGtoV4 v3, 71909472
  117  14 *    SUBf     v13, v11, v3
  119  14 * 3:
  119  14 *    CpyVtoV4 v12, v13
- 89,3 -
  121  14 *    SUSPEND
  122  14 *    VarDecl  6
  122  14 *    PshV4    v11
  123  15 *    CALLSYS  334           (float abs(const float))
  125  14 *    CpyRtoV4 v3
  126  14 *    PshV4    v12
  127  15 *    CALLSYS  334           (float abs(const float))
  129  14 *    CpyRtoV4 v13
  130  14 *    CMPf     v3, v13
  132  14 *    JNS      +4              (d:138)
  134  14 *    CpyVtoV4 v10, v11
  136  14 *    JMP      +2              (d:140)
  138  14 * 6:
  138  14 *    CpyVtoV4 v10, v12
  140  14 * 5:
  140  14 *    CpyVtoV4 v14, v10
- 92,3 -
  142  14 *    SUSPEND
  143  14 *    MULf     v13, v14, v1
  145  14 *    ADDf     v10, v4, v13
  147  14 * {
  147  14 * }
  147  14 *    CpyVtoR4 v10
  148  14 * 0:
  148  14 *    FREE     v0, 71613160
  150  14 *    RET      2
