1) Networking is just an aproximistaion
2) Built up of commands like 'build this' and 'do that'
3) Server/Client model for modern games

Server/Client: The game only really exists on the server. What the clients see is only an approximation.

How this works:
The client sends object states for the game objects to the server in
order for the server to evaluate the object state. While the information
is being transmited between the server and the client, the client does
approximations of the object state. If the client and the server disagrees
on the object state, the client accepts the server object state.

The object state:
The object state tells about the object's transform in most cases and
additional information.

Example/Concept:
// Psuedo code:
class Player : NetObject
{
	void onUpdate()
	{
		// If the current machine is a client
		if(isClient())
		{
			// Send state
			updateMove();
			sendState();
		}

		// If the current machine is the server
		if(isServer())
		{
			// If the damaged object is an client object
			if(damaged && isClientObject())
				sendClientCommand("decHealth", damage);
		}
	}

	void decHealth(int amt)
	{
		health -= amt;	
	}

	int health;
	Vector2 velocity;
}


